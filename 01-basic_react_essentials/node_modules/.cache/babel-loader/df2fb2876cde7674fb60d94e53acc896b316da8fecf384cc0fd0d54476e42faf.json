{"ast":null,"code":"import componentsImg from './assets/components.png';\nimport propsImg from './assets/config.png';\nimport jsxImg from './assets/jsx-ui.png';\nimport stateImg from './assets/state-mgmt.png';\nexport const CORE_CONCEPTS = [{\n  image: componentsImg,\n  title: 'Components',\n  description: 'The core UI building block - compose the user interface by combining multiple components.'\n}, {\n  image: jsxImg,\n  title: 'JSX',\n  description: 'Return (potentially dynamic) HTML(ish) code to define the actual markup that will be rendered.'\n}, {\n  image: propsImg,\n  title: 'Props',\n  description: 'Make components configurable (and therefore reusable) by passing input data to them.'\n}, {\n  image: stateImg,\n  title: 'State',\n  description: 'React-managed data which, when changed, causes the component to re-render & the UI to update.'\n}];\nexport const EXAMPLES = {\n  components: {\n    title: 'Components',\n    description: 'Components are the building blocks of React applications. A component is a self-contained module (HTML + optional CSS + JS) that renders some output.',\n    code: `\nfunction Welcome() {\n  return <h1>Hello, World!</h1>;\n}`\n  },\n  jsx: {\n    title: 'JSX',\n    description: 'JSX is a syntax extension to JavaScript. It is similar to a template language, but it has full power of JavaScript (e.g., it may output dynamic content).',\n    code: `\n<div>\n  <h1>Welcome {userName}</h1>\n  <p>Time to learn React!</p>\n</div>`\n  },\n  props: {\n    title: 'Props',\n    description: 'Components accept arbitrary inputs called props. They are like function arguments.',\n    code: `\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}`\n  },\n  state: {\n    title: 'State',\n    description: 'State allows React components to change their output over time in response to user actions, network responses, and anything else.',\n    code: `\nfunction Counter() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  function handleClick() {\n    setIsVisible(true);\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Show Details</button>\n      {isVisible && <p>Amazing details!</p>}\n    </div>\n  );\n}`\n  }\n};","map":{"version":3,"names":["componentsImg","propsImg","jsxImg","stateImg","CORE_CONCEPTS","image","title","description","EXAMPLES","components","code","jsx","props","state"],"sources":["/Users/wanderwise/Desktop/React/ReactByMaximilian/01-starting-setup/src/data.js"],"sourcesContent":["import componentsImg from './assets/components.png';\nimport propsImg from './assets/config.png';\nimport jsxImg from './assets/jsx-ui.png';\nimport stateImg from './assets/state-mgmt.png';\n\nexport const CORE_CONCEPTS = [\n\t{\n\t\timage: componentsImg,\n\t\ttitle: 'Components',\n\t\tdescription: 'The core UI building block - compose the user interface by combining multiple components.',\n\t},\n\t{\n\t\timage: jsxImg,\n\t\ttitle: 'JSX',\n\t\tdescription: 'Return (potentially dynamic) HTML(ish) code to define the actual markup that will be rendered.',\n\t},\n\t{\n\t\timage: propsImg,\n\t\ttitle: 'Props',\n\t\tdescription: 'Make components configurable (and therefore reusable) by passing input data to them.',\n\t},\n\t{\n\t\timage: stateImg,\n\t\ttitle: 'State',\n\t\tdescription: 'React-managed data which, when changed, causes the component to re-render & the UI to update.',\n\t},\n];\n\nexport const EXAMPLES = {\n\tcomponents: {\n\t\ttitle: 'Components',\n\t\tdescription: 'Components are the building blocks of React applications. A component is a self-contained module (HTML + optional CSS + JS) that renders some output.',\n\t\tcode: `\nfunction Welcome() {\n  return <h1>Hello, World!</h1>;\n}`,\n\t},\n\tjsx: {\n\t\ttitle: 'JSX',\n\t\tdescription: 'JSX is a syntax extension to JavaScript. It is similar to a template language, but it has full power of JavaScript (e.g., it may output dynamic content).',\n\t\tcode: `\n<div>\n  <h1>Welcome {userName}</h1>\n  <p>Time to learn React!</p>\n</div>`,\n\t},\n\tprops: {\n\t\ttitle: 'Props',\n\t\tdescription: 'Components accept arbitrary inputs called props. They are like function arguments.',\n\t\tcode: `\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}`,\n\t},\n\tstate: {\n\t\ttitle: 'State',\n\t\tdescription: 'State allows React components to change their output over time in response to user actions, network responses, and anything else.',\n\t\tcode: `\nfunction Counter() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  function handleClick() {\n    setIsVisible(true);\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Show Details</button>\n      {isVisible && <p>Amazing details!</p>}\n    </div>\n  );\n}`,\n\t},\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,yBAAyB;AACnD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,OAAO,MAAMC,aAAa,GAAG,CAC5B;EACCC,KAAK,EAAEL,aAAa;EACpBM,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE;AACd,CAAC,EACD;EACCF,KAAK,EAAEH,MAAM;EACbI,KAAK,EAAE,KAAK;EACZC,WAAW,EAAE;AACd,CAAC,EACD;EACCF,KAAK,EAAEJ,QAAQ;EACfK,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;AACd,CAAC,EACD;EACCF,KAAK,EAAEF,QAAQ;EACfG,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;AACd,CAAC,CACD;AAED,OAAO,MAAMC,QAAQ,GAAG;EACvBC,UAAU,EAAE;IACXH,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,uJAAuJ;IACpKG,IAAI,EAAG;AACT;AACA;AACA;EACC,CAAC;EACDC,GAAG,EAAE;IACJL,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,2JAA2J;IACxKG,IAAI,EAAG;AACT;AACA;AACA;AACA;EACC,CAAC;EACDE,KAAK,EAAE;IACNN,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,oFAAoF;IACjGG,IAAI,EAAG;AACT;AACA;AACA;EACC,CAAC;EACDG,KAAK,EAAE;IACNP,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,mIAAmI;IAChJG,IAAI,EAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}